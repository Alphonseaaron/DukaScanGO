// Mocks generated by Mockito 5.4.4 from annotations
// in dukascango/test/blocs/wallet_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:dukascango/domain/models/wallet_ledger_entry_model.dart' as _i5;
import 'package:dukascango/domain/models/wallet_model.dart' as _i4;
import 'package:dukascango/domain/services/wallet_service.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [WalletService].
///
/// See the documentation for Mockito's code generation for more information.
class MockWalletService extends _i1.Mock implements _i2.WalletService {
  MockWalletService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<void> createWalletForUser(String? userId) => (super.noSuchMethod(
        Invocation.method(
          #createWalletForUser,
          [userId],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<_i4.Wallet?> getWallet(String? walletId) => (super.noSuchMethod(
        Invocation.method(
          #getWallet,
          [walletId],
        ),
        returnValue: _i3.Future<_i4.Wallet?>.value(),
      ) as _i3.Future<_i4.Wallet?>);

  @override
  _i3.Future<void> addLedgerEntry(
    String? walletId,
    _i5.WalletLedgerEntry? entry,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addLedgerEntry,
          [
            walletId,
            entry,
          ],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<List<_i5.WalletLedgerEntry>> getLedgerEntries(String? walletId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getLedgerEntries,
          [walletId],
        ),
        returnValue: _i3.Future<List<_i5.WalletLedgerEntry>>.value(
            <_i5.WalletLedgerEntry>[]),
      ) as _i3.Future<List<_i5.WalletLedgerEntry>>);
}
